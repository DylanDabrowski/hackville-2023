import Spinner from "@/components/Spinner";
import Head from "next/head";
import { useState, useEffect } from "react";

export default function Home() {
  const [subject, setSubject] = useState<string>("Skydiving Trip");
  const [opening, setOpening] = useState<string>("Hey Team!");
  const [time, setTime] = useState<string>("Monday 5:00PM to 8:00PM");
  const [location, setLocation] = useState<string>("180 Apple st, Toronto");
  const [extraInfo, setExtraInfo] = useState<string>("");
  const [recipients, setRecipients] = useState<string>(
    "dylandabrowski@gmail.com"
  );

  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [output, setOutput] = useState<string>("");

  const makePrompt = () => {
    return `Please make a invite email that starts with ${opening}, discusses the topic of ${subject}, mention these dates/times: ${time}, mention that it is all taking place at this location: ${location}, and mention these things: ${extraInfo}`;
  };

  const makeEmail = async () => {
    setIsLoading(true);
    const prompt = makePrompt();
    await fetch(`/api/generate_email?prompt=${prompt}`)
      .then((res) => res.json())
      .then(
        (result) => {
          console.log(result);
          setOutput(result.body.generations[0].text);
        },
        (error) => {
          console.log(error);
        }
      );
    setIsLoading(false);
  };

  const sendEmail = async () => {
    const resp = fetch(`/api/send_email`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        to: recipients,
        subject: subject,
        text: output,
      }),
    });
    return await resp;
  };

  useEffect(() => {
    console.log(output);
  }, [output]);

  return (
    <>
      <Head>
        <title>RSVPify</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main className="h-screen w-screen">
        <div className="flex flex-col m-5">
          <div>
            <h1 className="text-8xl text-gray-800">RSVPify!</h1>
            <p className="text-sm text-gray-500 mt-2">
              So, you've planned a work party, and now you need to invite all
              your coworkers? Don't waste time writing that email. Let RSVPify
              do all the work for you! Simply enter the information in the
              prompts, and get an AI-generated email to send to all your
              coworkers, friends, family, or anyone else who may be waiting for
              your invitation.
            </p>
          </div>
          {output ? (
            <div className="mt-10">
              <h2 className="text-gray-500 ml-5">Preview of your email:</h2>
              <textarea
                className="w-full h-80 border rounded-lg p-5"
                value={output}
                onChange={(e) => {
                  setOutput(e.target.value);
                }}
              />
              <input
                className="rounded-lg border p-3 w-full mt-3"
                type="text"
                placeholder="Who is it being sent TO?"
                value={recipients}
                onChange={(e) => {
                  setRecipients(e.target.value);
                }}
              />
              <button
                className="mt-8 ml-4 bg-green-500 w-32 p-3 rounded-xl"
                onClick={() => {
                  sendEmail();
                }}
              >
                Send Email!
              </button>
            </div>
          ) : (
            <div className="max-w-xl mt-10">
              <p className="text-gray-300 text-sm mt-2">Subject</p>
              <input
                className="rounded-lg border p-3 w-full"
                type="text"
                placeholder="Subject for your email"
                value={subject}
                onChange={(e) => {
                  setSubject(e.target.value);
                }}
              />
              <p className="text-gray-300 text-sm mt-2">Greeting</p>
              <input
                className="rounded-lg border p-3 w-full"
                type="text"
                placeholder="How should it open? (ex. 'Hey Team!', 'Hello Everyone!')"
                value={opening}
                onChange={(e) => {
                  setOpening(e.target.value);
                }}
              />
              <p className="text-gray-300 text-sm mt-2">Times</p>
              <input
                className="rounded-lg border p-3 w-full"
                type="text"
                placeholder="What Time(s) / Date(s) is the event?"
                value={time}
                onChange={(e) => {
                  setTime(e.target.value);
                }}
              />
              <p className="text-gray-300 text-sm mt-2">Location</p>
              <input
                className="rounded-lg border p-3 w-full"
                type="text"
                placeholder="Where is the event being held?"
                value={location}
                onChange={(e) => {
                  setLocation(e.target.value);
                }}
              />
              <p className="text-gray-300 text-sm mt-2">Other info</p>
              <input
                className="rounded-lg border p-3 w-full"
                type="text"
                placeholder="Any other information you want to include"
                value={extraInfo}
                onChange={(e) => {
                  setExtraInfo(e.target.value);
                }}
              />
              {isLoading ? (
                <Spinner />
              ) : (
                <button
                  className="mt-8 ml-4 bg-green-500 w-32 p-3 rounded-xl"
                  onClick={() => {
                    makeEmail();
                  }}
                >
                  RSVPify!
                </button>
              )}
            </div>
          )}
        </div>
      </main>
    </>
  );
}
