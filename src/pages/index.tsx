import Spinner from "@/components/Spinner";
import TextField from "@/components/TextField";
import Head from "next/head";
import { useState, useEffect } from "react";

export default function Home() {
  const [subject, setSubject] = useState<string>("");
  const [opening, setOpening] = useState<string>("");
  const [time, setTime] = useState<string>("");
  const [location, setLocation] = useState<string>("");
  const [extraInfo, setExtraInfo] = useState<string>("");
  const [recipients, setRecipients] = useState<string>("");

  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [emailSent, setEmailSent] = useState<boolean>(false);
  const [output, setOutput] = useState<string>("");

  const makePrompt = () => {
    return `Please make a invite email that starts with ${opening}, discusses the topic of ${subject}, mention these dates/times: ${time}, mention that it is all taking place at this location: ${location}, and mention these things: ${extraInfo}`;
  };

  const makeEmail = async () => {
    setIsLoading(true);
    const prompt = makePrompt();
    await fetch(`/api/generate_email?prompt=${prompt}`)
      .then((res) => res.json())
      .then(
        (result) => {
          console.log(result);
          setOutput(result.body.generations[0].text);
        },
        (error) => {
          console.log(error);
        }
      );
    setIsLoading(false);
  };

  const sendEmail = async () => {
    setIsLoading(true);
    const resp = fetch(`/api/send_email`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        to: recipients,
        subject: subject,
        text: output,
      }),
    });
    setIsLoading(false);
    setEmailSent(true);
    return await resp;
  };

  useEffect(() => {
    console.log(output);
  }, [output]);

  return (
    <>
      <Head>
        <title>RSVPify</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main className="h-screen w-screen text-center bg-blue-300">
        <div className="p-5 flex flex-col items-center">
          <div className="flex flex-col items-center">
            <h1 className="text-8xl text-gray-700 pt-5">RSVPify!</h1>
            <p className="text-lg text-white mt-2 w-full text-left">
              So, you've planned a work party, and now you need to invite all
              your coworkers? Don't waste time writing that email. Let RSVPify
              do all the work for you! Simply enter the information in the
              prompts, and get an AI-generated email to send to all your
              coworkers, friends, family, or anyone else who may be waiting for
              your invitation.
            </p>
          </div>
          {output ? (
            <div className="mt-5 w-full">
              <h1 className="text-gray-700 text-left">
                Preview of your email:
              </h1>
              <textarea
                className="w-full h-80 border rounded-lg p-5"
                value={output}
                onChange={(e) => {
                  setOutput(e.target.value);
                }}
              />
              <TextField
                label="Recipients"
                placeholder="Recipient emails (seperated by a space)"
                value={recipients}
                setValue={setRecipients}
              />
              {isLoading ? (
                <div className="flex flex-col items-center mt-8 p-3 text-center">
                  <Spinner />
                </div>
              ) : (
                <button
                  className="mt-8 bg-green-100 w-32 p-3 rounded-xl"
                  onClick={() => {
                    sendEmail();
                  }}
                >
                  Send Email
                </button>
              )}
              {emailSent ? (
                <p className="mt-2 text-green-100 text-lg">
                  Email sent! all recipients should recieve an email shortly
                </p>
              ) : (
                <></>
              )}
            </div>
          ) : (
            <div className="mt-5 w-full">
              <TextField
                label="Subject"
                placeholder="Subject for your email"
                value={subject}
                setValue={setSubject}
              />
              <TextField
                label="Greeting"
                placeholder="How should it open? (ex. 'Hey Team!', 'Hello Everyone!')"
                value={opening}
                setValue={setOpening}
              />
              <TextField
                label="Time & Date"
                placeholder="What Time(s) / Date(s) is the event?"
                value={time}
                setValue={setTime}
              />
              <TextField
                label="Location"
                placeholder="Where is the event being held?"
                value={location}
                setValue={setLocation}
              />
              <TextField
                label="Extra Info"
                placeholder="Any other information you want to include"
                value={extraInfo}
                setValue={setExtraInfo}
              />
              {isLoading ? (
                <div className="flex flex-col items-center mt-8 p-3 text-center">
                  <Spinner />
                </div>
              ) : (
                <button
                  className="mt-8 bg-green-100 w-32 p-3 rounded-xl"
                  onClick={() => {
                    makeEmail();
                  }}
                >
                  RSVPify!
                </button>
              )}
            </div>
          )}
        </div>
      </main>
    </>
  );
}
